@startuml
package RadioactiveDecay  {
  ChemicalElement --* IAtom
  IAtom <|-- Atom
  Atom *-- Parameter
  Sample *-- Atom
  Experiment --|> Thread
  Experiment *-- Sample
  Parameter --|> HashMap
  interface IAtom{
    - ChemicalElement Info
    + int GetAtomicNumber()
    + String GetName()

  }

  enum ChemicalElement{
    {field} Uran (235)
    {field} Wegiel(14)
    {field} Fosfor(32)
    {field} Pluton(239)
    {field} Kobalt(60)
    {field} Wodor(3)
    {field} Potas(40)
    {field} Rad(226)
    {field} Miedz(64)
    {field} Wapn(45)
    {field} Jod(131)
    {field} Polon(210)
    - final int code
    - ChemicalElement(int)

  }

class Atom{
  - Parameter parameter
  - Boolean undergone
  --
  ..Konstruktor..
  + Atom(ChemicalElement,String,Float)
  + Atom(Atom)

  ..Getter..
  + String GetName()
  + int GetAtomicNumber()
  + double getParameterName()
  + double getParameterValue(String)
  + Bollean isUndergone()

  ..Setter..
  +void undergo()
}

class Parameter{
+Float put(String,Float)
+Float put(Parameter)
-Boolean isCorrectKey(String,String)

}

class Sample{
  - Atom[] sample
  --Konstruktor--
  +Sample(int,ChemicalElement,String,Float)
  +Sample(int,Atom)
  +Sample(Sample)
  ..Getter..
  +get()
  +isUndergone(int)
  +size()
}

class Experiment{
  ..Konstruktor..
  +Experiment(long,int,Atom)
  +Experiment(long,int,ChemicalElement,String,Float)
  +Experiment(long,Sample)
  ..Getter..
  +void getDuration(long)
  +getRadiologicalActivity()
  +getRemainingParticles()
  +getSurviveProbability()
  +isUndergone(int)
  +getTime()

 ..Obliczenia..
  +long remainingParticles()
  +float surviveProbability()
  +float radiologicalActivity()
  ..Watek..
  +void run()
}
}
@enduml
